// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using W1EHUB.Repo.Data;

#nullable disable

namespace W1EHUB.Repo.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231107101250_CountryAndRegionTableAdded")]
    partial class CountryAndRegionTableAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("W1EHUB.Core.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5782),
                            Name = "North East England",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5783),
                            Name = "North West England",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5785),
                            Name = "Yorkshire and the Humber",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5786),
                            Name = "West Midlands",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5787),
                            Name = "East Midlands",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5836),
                            Name = "East of England",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5837),
                            Name = "South West England",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5838),
                            Name = "London",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5839),
                            Name = "South East England",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5840),
                            Name = "Highlands and Islands",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 11,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5841),
                            Name = "North East Scotland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 12,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5842),
                            Name = "Central Scotland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 13,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5843),
                            Name = "South of Scotland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 14,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5845),
                            Name = "Glasgow",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 15,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5846),
                            Name = "Edinburgh and the Lothians",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 16,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5847),
                            Name = "West of Scotland",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 17,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5848),
                            Name = "North Wales",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 18,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5849),
                            Name = "Mid Wales",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 19,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5850),
                            Name = "South Wales",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 20,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5851),
                            Name = "Cardiff",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 21,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5852),
                            Name = "Swansea",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 22,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5853),
                            Name = "Newport",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 23,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5854),
                            Name = "Antrim and Newtownabbey",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 24,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5855),
                            Name = "Armagh, Banbridge, and Craigavon",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 25,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5856),
                            Name = "Belfast",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 26,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5857),
                            Name = "Causeway Coast and Glens",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 27,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5858),
                            Name = "Derry and Strabane",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 28,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5859),
                            Name = "Fermanagh and Omagh",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 29,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5860),
                            Name = "Lisburn and Castlereagh",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 30,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5861),
                            Name = "Mid and East Antrim",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 31,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5862),
                            Name = "Mid Ulster",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 32,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5863),
                            Name = "Newry, Mourne, and Down",
                            RegionId = 4
                        });
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Favorite");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.FavoriteCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FavoriteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FavoriteId");

                    b.ToTable("FavoriteCompany");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5761),
                            Name = "England"
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5763),
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5764),
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5765),
                            Name = "Northern Ireland"
                        });
                });

            modelBuilder.Entity("W1EHUB.Core.Model.StaffMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("StaffMembers");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 11, 7, 15, 12, 50, 224, DateTimeKind.Local).AddTicks(5606),
                            Email = "abc@email.com",
                            Password = "abc"
                        });
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Company", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Category", "Category")
                        .WithMany("Companies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Country", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Favorite", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.FavoriteCompany", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("W1EHUB.Core.Model.Favorite", "Favorite")
                        .WithMany()
                        .HasForeignKey("FavoriteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Favorite");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.StaffMember", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Company", "Company")
                        .WithMany("StaffMembers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Category", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Company", b =>
                {
                    b.Navigation("StaffMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
