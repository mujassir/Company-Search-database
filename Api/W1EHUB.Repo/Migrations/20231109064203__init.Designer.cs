// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using W1EHUB.Repo.Data;

#nullable disable

namespace W1EHUB.Repo.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231109064203__init")]
    partial class _init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("W1EHUB.Core.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3781),
                            Name = "England"
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3783),
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3784),
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3785),
                            Name = "Northern Ireland"
                        });
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Favorite");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.FavoriteCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FavoriteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FavoriteId");

                    b.ToTable("FavoriteCompany");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Certificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Votes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Region");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3799),
                            Name = "North East England"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3801),
                            Name = "North West England"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3802),
                            Name = "Yorkshire and the Humber"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3839),
                            Name = "West Midlands"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3840),
                            Name = "East Midlands"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3841),
                            Name = "East of England"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3843),
                            Name = "South West England"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3844),
                            Name = "London"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3845),
                            Name = "South East England"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 2,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3846),
                            Name = "Highlands and Islands"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 2,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3847),
                            Name = "North East Scotland"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 2,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3848),
                            Name = "Central Scotland"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 2,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3849),
                            Name = "South of Scotland"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 2,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3850),
                            Name = "Glasgow"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 2,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3851),
                            Name = "Edinburgh and the Lothians"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 2,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3852),
                            Name = "West of Scotland"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 3,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3853),
                            Name = "North Wales"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 3,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3854),
                            Name = "Mid Wales"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 3,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3856),
                            Name = "South Wales"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 3,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3857),
                            Name = "Cardiff"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 3,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3858),
                            Name = "Swansea"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 3,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3859),
                            Name = "Newport"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3860),
                            Name = "Antrim and Newtownabbey"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3861),
                            Name = "Armagh, Banbridge, and Craigavon"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3862),
                            Name = "Belfast"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3863),
                            Name = "Causeway Coast and Glens"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3864),
                            Name = "Derry and Strabane"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3865),
                            Name = "Fermanagh and Omagh"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3866),
                            Name = "Lisburn and Castlereagh"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3867),
                            Name = "Mid and East Antrim"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3868),
                            Name = "Mid Ulster"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 4,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3869),
                            Name = "Newry, Mourne, and Down"
                        });
                });

            modelBuilder.Entity("W1EHUB.Core.Model.StaffMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("StaffMembers");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 11, 9, 11, 42, 3, 25, DateTimeKind.Local).AddTicks(3656),
                            Email = "abc@email.com",
                            Password = "abc"
                        });
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Company", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Category", "Category")
                        .WithMany("Companies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Favorite", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.FavoriteCompany", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("W1EHUB.Core.Model.Favorite", "Favorite")
                        .WithMany()
                        .HasForeignKey("FavoriteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Favorite");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Program", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Company", "Company")
                        .WithMany("Programs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Project", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Region", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.StaffMember", b =>
                {
                    b.HasOne("W1EHUB.Core.Model.Company", "Company")
                        .WithMany("StaffMembers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Category", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("W1EHUB.Core.Model.Company", b =>
                {
                    b.Navigation("Programs");

                    b.Navigation("Projects");

                    b.Navigation("StaffMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
